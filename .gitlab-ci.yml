image: node:18.17.1

variables:
  APT_PACKAGES: "libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2 libxtst6 xauth xvfb"

stages:
  - prepare
  - test
  - cypress
  - eslint

before_script:
  - npm ci --cache .npm --prefer-offline

prepare-backend:
  image: docker:19.03.12
  stage: prepare
  services:
    - docker:dind
  before_script:
    # Installation de Docker Compose
    - apk add --no-cache py-pip python3-dev libffi-dev openssl-dev gcc libc-dev rust cargo make
    - pip install docker-compose
  script:
    # Assurez-vous que le fichier docker-compose.yml est correctement configur√© pour votre service
    - docker-compose up -d
    - until curl --output /dev/null --silent --head --fail http://localhost:3000; do printf '.'; sleep 5; done
  only:
    - main

test:
  stage: test
  script:
    - npm run test:unit

cypress: 
  stage: cypress
  before_script:
    - apt-get update && apt-get install -y $APT_PACKAGES
    - npm install -g cypress
  script: 
    - npm run dev&
    - npx cypress run

eslint: 
  stage: eslint
  script: 
    - npm run lint
